USE CRE_ODS
GO


-- SQL ASSUMPTION: 2nd LIENS DO NOT HAVE RESERVE ACCOUNTS BY ITSELF
 
/*
-- SELECT YEAR(CONVERT(DATE, [DATE LAST POSTED])), * FROM HSB_HIST.REPLACEMENT_RESERVES
-- SELECT COUNT(DISTINCT [D.D.A. #]) FROM HSB_HIST.REPLACEMENT_RESERVES WHERE [LOAN NUMBER ] = @ServicerLoanNumber

SELECT COUNT(DISTINCT [D.D.A. #]) AS [DDA_COUNT], [LOAN NUMBER] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE /*(CONVERT(DATE, [TRANSACTION DATE]) >= '2017-01-01' AND CONVERT(DATE, [TRANSACTION DATE]) <= '2018-12-31') AND */ YEAR(CONVERT(DATE, [DATE LAST POSTED])) = 2019  
GROUP BY [LOAN NUMBER] HAVING COUNT(DISTINCT [D.D.A. #]) > 1 ORDER BY [LOAN NUMBER] 

SELECT COUNT(DISTINCT [D.D.A. #]), [LOAN NUMBER] FROM 
(SELECT DISTINCT [LOAN NUMBER], [D.D.A. #] /*, MAX([DATE LAST POSTED]) AS [EFF_DATE]*/ FROM HSB_HIST.REPLACEMENT_RESERVES a
WHERE [D.D.A. #] IN (SELECT DISTINCT [D.D.A. #] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE YEAR(CONVERT(DATE, [DATE LAST POSTED])) = 2019) /*GROUP BY [LOAN NUMBER], [D.D.A. #]*/) AS B
GROUP BY [LOAN NUMBER] HAVING COUNT(DISTINCT [D.D.A. #]) > 1
ORDER BY [LOAN NUMBER]

SELECT COUNT(DISTINCT [D.D.A. #]) AS [DDA_COUNT], [LOAN NUMBER] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE (CONVERT(DATE, [TRANSACTION DATE]) >= '2017-01-01' AND CONVERT(DATE, [TRANSACTION DATE]) <= '2018-12-31') 
	AND YEAR(CONVERT(DATE, [DATE LAST POSTED])) = 2019  
	GROUP BY [LOAN NUMBER] HAVING COUNT(DISTINCT [D.D.A. #]) > 1 ORDER BY [LOAN NUMBER] 

SELECT DISTINCT [D.D.A. #] AS DDA_COUNT, CONVERT(BIGINT, [LOAN NUMBER]) AS [LOANNBR] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE YEAR(CONVERT(DATE, [PAID FOR DATE])) IN (2017, 2018) AND YEAR(CONVERT(DATE, [DATE LAST POSTED])) = 2019 /* GROUP BY [LOAN NUMBER] HAVING COUNT(DISTINCT [D.D.A. #]) > 1 */ ORDER BY CONVERT(BIGINT, [LOAN NUMBER])

SELECT DISTINCT [D.D.A. #] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE YEAR(CONVERT(DATE, [DATE LAST POSTED])) = 2019 AND YEAR(CONVERT(DATE, [TRANSACTION DATE])) IN (2017, 2018) AND [LOAN NUMBER] = 900100548

SELECT DISTINCT [D.D.A. #], [LOAN NUMBER] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE [LOAN NUMBER] IN (900100765, 900100548) AND YEAR(CONVERT(DATE, [PAID FOR DATE])) IN (YEAR(GETDATE()), YEAR(GETDATE())-1, YEAR(GETDATE())-2)
	ORDER BY [LOAN NUMBER]



-- REPLACEMENT RESERVES (FROM rptFnmaOsar.sql)
DECLARE @RepRes TABLE (LOAN_NUM BIGINT, REPL_RES_ESCROW_PAYMENT FLOAT, [PAYMENT_RES_AMT] FLOAT, REPL_RES_BEGINNING_BAL FLOAT, REPL_RES_ENDING_BAL FLOAT)

INSERT INTO @RepRes (LOAN_NUM, REPL_RES_ESCROW_PAYMENT, PAYMENT_RES_AMT) 
SELECT LOANNBR, SUM(REPL_RES_ESCROW_PAYMENT) AS REPL_RES_ESCROW_PAYMENT, SUM([PAYMENT-RES_AMT]) AS [PAYMENT_RES_AMT] /*, REPL_RES_ESCROW_CURR_BAL*/ FROM HSB_HIST.STRATEGY_EXTRACT a
		--LEFT JOIN HSB_CURR.NOTE_MASTER b ON LOANNBR = b.HMST_LOAN_NUMBER
		--LEFT JOIN HSB_CURR.PROPERTY c ON c.CONTROL_ID = b.CONTROL_ID
	WHERE DATA_EFFDATE IN ( 
'2017-12-31',
'2018-01-31',
'2018-02-28',
'2018-03-31',
'2018-04-30',
'2018-05-31',
'2018-06-30',
'2018-07-31',
'2018-08-31',
'2018-09-30',
'2018-10-31',
'2018-11-30',
'2018-12-31'
) 
	AND a.LOANNBR = @ServicerLoanNumber
	GROUP BY LOANNBR

UPDATE a SET a.REPL_RES_BEGINNING_BAL = REPL_RES_ESCROW_CURR_BAL
	FROM @RepRes a
	INNER JOIN HSB_HIST.STRATEGY_EXTRACT b ON a.LOAN_NUM = b.LOANNBR AND b.DATA_EFFDATE = '2018-01-31'

UPDATE a SET a.REPL_RES_ENDING_BAL = REPL_RES_ESCROW_CURR_BAL
	FROM @RepRes a
	INNER JOIN HSB_HIST.STRATEGY_EXTRACT b ON a.LOAN_NUM = b.LOANNBR AND b.DATA_EFFDATE = '2018-12-31'

SELECT * FROM @RepRes



*/

DECLARE @ServicerLoanNumber BIGINT = 900100548; --900100548 900100765 900100492 900100933

DECLARE @Liens TABLE (SecondLiens BIGINT) 

INSERT INTO @Liens
		SELECT a.ServicerLoanNumber  
			FROM tblNoteExp a 
				INNER JOIN tblNote b ON b.NoteId = a.NoteId_F
				LEFT JOIN tblNote c ON b.ControlId_F = c.ControlId_F AND b.NoteId <> c.NoteId
				LEFT JOIN tblNoteExp d ON d.NoteId_F = c.NoteId
			WHERE d.ServicerLoanNumber = @ServicerLoanNumber
	UNION 
		SELECT @ServicerLoanNumber

--SELECT * FROM @Liens

DECLARE @rr_txn TABLE (ROW_NUM INT, LOAN_NUMBER BIGINT, ESCROW_SEQ INT, BEG_BAL MONEY, DDA_AC_NUM BIGINT, TXN_CODE NVARCHAR (4), TXN_DESC NVARCHAR (25), TXN_DATE DATE, PAID_DATE DATE)

--IF @isTextString = 0
--	BEGIN 
		;WITH rr_cte AS(
			SELECT
			   ROW_NUMBER() OVER (PARTITION BY [LOAN NUMBER] ORDER BY CONVERT(DATE, [TRANSACTION DATE])) AS ROW_NUM,
			   *
			 FROM (
				SELECT DISTINCT 
					[LOAN NUMBER],
					[ESCROW #],
					[BEGINNING BALANCE],
					[D.D.A. #],
					[TRANSACTION CODE],
					[FULL DESC],
					CONVERT(DATE, [TRANSACTION DATE]) AS [TRANSACTION DATE],
					CONVERT(DATE, [PAID FOR DATE]) AS [PAID FOR DATE]

				  FROM HSB_HIST.REPLACEMENT_RESERVES WHERE [LOAN NUMBER] IN (SELECT SecondLiens FROM @Liens) AND YEAR(CONVERT(DATE, [DATE LAST POSTED])) = YEAR(GETDATE()) AND (YEAR(CONVERT(DATE, [TRANSACTION DATE])) IN (YEAR(GETDATE()) - 2, YEAR(GETDATE()) - 1, YEAR(GETDATE()))) 
					AND [D.D.A. #] IN (
						SELECT DISTINCT [D.D.A. #] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE [LOAN NUMBER] IN (SELECT SecondLiens FROM @Liens) AND YEAR(CONVERT(DATE, [PAID FOR DATE])) IN (YEAR(GETDATE()), YEAR(GETDATE()) - 1, YEAR(GETDATE()) - 2)
						)
				  ) as A 
			)
		INSERT INTO @rr_txn
			SELECT * FROM rr_cte
--	END
--ELSE
--	BEGIN 
		--;WITH rr_cte AS(
		--	SELECT
		--	   ROW_NUMBER() OVER (ORDER BY CONVERT(DATE, [TRANSACTION DATE])) AS ROW_NUM,
		--	   *
		--	 FROM (
		--		SELECT DISTINCT 
		--			[LOAN NUMBER],
		--			[ESCROW #],
		--			[BEGINNING BALANCE],
		--			[D.D.A. #],
		--			[TRANSACTION CODE],
		--			[FULL DESC],
		--			CONVERT(DATE, [TRANSACTION DATE]) AS [TRANSACTION DATE],
		--			CONVERT(DATE, [PAID FOR DATE]) AS [PAID FOR DATE]

		--		  FROM HSB_HIST.REPLACEMENT_RESERVES WHERE [LOAN NUMBER] IN (SELECT SecondLiens FROM @Liens) AND YEAR(CONVERT(DATE, [DATE LAST POSTED])) = YEAR(GETDATE()) AND (YEAR(CONVERT(DATE, [TRANSACTION DATE])) IN (YEAR(GETDATE()) - 2, YEAR(GETDATE()) - 1, YEAR(GETDATE()))) 
		--			AND [D.D.A. #] IN (
		--				SELECT DISTINCT [D.D.A. #] FROM HSB_HIST.REPLACEMENT_RESERVES WHERE [LOAN NUMBER] IN (SELECT SecondLiens FROM @Liens) AND YEAR(CONVERT(DATE, [PAID FOR DATE])) IN (YEAR(GETDATE()), YEAR(GETDATE()) - 1, YEAR(GETDATE()) - 2)
		--				)
		--		  ) as A 
		--	)
		--INSERT INTO @rr_txn
		--	SELECT * FROM rr_cte
	--END 




DECLARE @rr_data TABLE (LOAN_NUMBER BIGINT, BEG_BAL MONEY, END_BAL MONEY, DISBURSALS MONEY, TXN_YEAR INT)

INSERT INTO @rr_data (TXN_YEAR, LOAN_NUMBER)
	SELECT DISTINCT YEAR(TXN_DATE), LOAN_NUMBER FROM @rr_txn

UPDATE @rr_data SET
	DISBURSALS = (
		SELECT SUM(ISNULL([DIFF], 0)) AS [DISBURSALS] FROM (
			SELECT ISNULL((b.[BEG_BAL] - a.[BEG_BAL]), 0) AS [DIFF], a.* FROM @rr_txn a INNER JOIN @rr_txn b ON a.ROW_NUM + 1 = b.ROW_NUM --AND a.[DDA_AC_NUM] = b.[DDA_AC_NUM]  
			) AS B
		WHERE B.TXN_DESC LIKE '%DIS%' AND YEAR(B.TXN_DATE) IN (YEAR(GETDATE()) - 1, YEAR(GETDATE()) - 2) AND LOAN_NUMBER = LOAN_NUMBER AND TXN_YEAR = YEAR(TXN_DATE) 
		GROUP BY LOAN_NUMBER, YEAR(B.TXN_DATE)
	)


--INSERT INTO @rr_data (DISBURSALS, TXN_YEAR, LOAN_NUMBER)
--	SELECT SUM([DIFF]) AS [DISBURSALS], YEAR(B.TXN_DATE) AS [TXN_DATE], LOAN_NUMBER FROM (
--		SELECT (b.[BEG_BAL] - a.[BEG_BAL]) AS [DIFF], a.* FROM @rr_txn a INNER JOIN @rr_txn b ON a.ROW_NUM + 1 = b.ROW_NUM --AND a.[DDA_AC_NUM] = b.[DDA_AC_NUM]  
--		) AS B
--		WHERE B.TXN_DESC LIKE '%DIS%' AND YEAR(B.TXN_DATE) IN (YEAR(GETDATE()) - 1, YEAR(GETDATE()) - 2)
--		GROUP BY LOAN_NUMBER, YEAR(B.TXN_DATE)

--DECLARE @tmp INT
--SELECT @tmp = COUNT(*) FROM @rr_data

--IF @tmp = 0
--BEGIN
--	INSERT INTO @rr_data (DISBURSALS, TXN_YEAR, LOAN_NUMBER)
--		SELECT DISTINCT 0, YEAR(TXN_DATE), LOAN_NUMBER FROM @rr_txn
--END


DECLARE @rr_dates TABLE (DATES DATE, TXN_YEAR INT, LOAN_NUMBER BIGINT)

INSERT INTO @rr_dates
	SELECT MIN(TXN_DATE) AS DATES, YEAR(TXN_DATE) AS TXN_YEAR, LOAN_NUMBER FROM @rr_txn GROUP BY LOAN_NUMBER, YEAR(TXN_DATE)

UPDATE a SET 
	a.BEG_BAL = b.BEG_BAL,
	a.DISBURSALS = ISNULL(a.DISBURSALS, 0)
	FROM @rr_data a INNER JOIN @rr_txn b ON a.LOAN_NUMBER = b.LOAN_NUMBER 
		INNER JOIN @rr_dates c ON a.LOAN_NUMBER = c.LOAN_NUMBER
	WHERE b.TXN_DATE = c.DATES AND a.TXN_YEAR = c.TXN_YEAR

UPDATE a SET 
	a.END_BAL = ISNULL(b.BEG_BAL, 0)
	FROM @rr_data a INNER JOIN @rr_txn b ON a.LOAN_NUMBER = b.LOAN_NUMBER 
		INNER JOIN @rr_dates c ON a.LOAN_NUMBER = c.LOAN_NUMBER
	WHERE b.TXN_DATE = c.DATES AND a.TXN_YEAR = (c.TXN_YEAR - 1)

SELECT * FROM @rr_data

